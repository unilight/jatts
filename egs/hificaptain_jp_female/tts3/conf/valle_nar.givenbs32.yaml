###########################################################
#                FEATURE EXTRACTION SETTING               #
###########################################################
sampling_rate: 48000     # Sampling rate.
fft_size: 2048           # FFT size.
hop_size: 512            # Hop size.
win_length: null         # Window length.
                         # If set to null, it will be the same as fft_size.
window: "hann"           # Window function.
num_mels: 80             # Number of mel basis.
fmin: 0                 # Minimum freq in mel basis calculation.
fmax: null               # Maximum frequency in mel basis calculation.
global_gain_scale: 1.0   # Will be multiplied to all of waveform.

feat_list: ["encodec_24khz"]
prompt_feat_list: ["encodec_24khz"]
out_feat_type: encodec_24khz
prompt_strategy: "given"  # one of: same, given

###########################################################
#              NETWORK ARCHITECTURE SETTING               #
###########################################################
model_type: VALLENAR
model_params:
    n_tokens: 1024
    n_prom_levels: 8
    n_resp_levels: 7                # AR model: 1; NAR model: levels (4 or 8) - 1
    prompt_prefix_mode: 1           # 0: no prefix, 1: use random segment of provided prompt, 2: use segment of same utterance
    prompt_max_frame_length: 225    # Maximum length of prompt in frames.

###########################################################
#                      LOSS SETTING                       #
###########################################################
trainer_type: VALLETrainer
collater_type: VALLECollater

###########################################################
#                   INFERENCE SETTING                     #
###########################################################
vocoder:
    vocoder_type: encodec_24khz

###########################################################
#                  DATA LOADER SETTING                    #
###########################################################
batch_size: 16                  # Batch size.
pin_memory: true                # Whether to pin memory in Pytorch DataLoader.
num_workers: 2                  # Number of workers in Pytorch DataLoader.
allow_cache: true               # Whether to allow cache in dataset. If true, it requires cpu memory.
gradient_accumulate_steps: 2    # Number of forward steps before a backward step. Used when OOM happens.
                                # 1 GPU, 16 * 2 = 32

###########################################################
#             OPTIMIZER & SCHEDULER SETTING               #
###########################################################
optimizer_type: Adam
optimizer_params:
    lr: 0.0001
grad_norm: 1.0              # Gradient norm.
scheduler_type: StepLR
scheduler_params:
    step_size: 10000
    gamma: 0.5

###########################################################
#                    INTERVAL SETTING                     #
###########################################################
train_max_steps: 100000     # Number of training steps.
save_interval_steps: 1000   # Interval steps to save checkpoint.
eval_interval_steps: 100    # Interval steps to evaluate the network.
log_interval_steps: 10      # Interval steps to record the training log.

###########################################################
#                     OTHER SETTING                       #
###########################################################
num_save_intermediate_results: 4  # Number of results to be saved as intermediate results.
